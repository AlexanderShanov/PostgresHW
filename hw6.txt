1. Настройте выполнение контрольной точки раз в 30 секунд.
 Установил postgresql.conf checkpoint_timeout = 30s 
 
2. 10 минут c помощью утилиты pgbench подавайте нагрузку.
 Запустил sudo pgbench -c8 -P 60 -T 600 -h 158.160.22.186 -p 5432 -U postgres postgres
 
3. Измерьте, какой объем журнальных файлов был сгенерирован за это время. Оцените, какой объем приходится в среднем на одну контрольную точку. 
Померил объем файлов до и после пуска pgbench. 
С помощью запроса SELECT  pg_current_wal_lsn(); запомнил точку (0/5871DAF0) 
После работы pgbench выполнил запрос SELECT pg_size_pretty(pg_wal_lsn_diff(pg_current_wal_lsn(), '0/5871DAF0')); 
и получил 398 MB следовательно на каждую контрольную точку приходится 398/20 = 20МВ.

4. Проверьте данные статистики: все ли контрольные точки выполнялись точно по расписанию. Почему так произошло? 
Включил параметр log_checkpoints = on;
Контрольные точки выполняются не точно по расписанию потому, что параметр checkpoint_completion_target = 0.8, 
и система сама принимает решение когда запускаться в этом интервале.
Периоды падения производительности примерно соответствуют времени запуска checkpoint.

5. Сравните tps в синхронном/асинхронном режиме утилитой pgbench. Объясните полученный результат
Запустил два pgbench в разных терминалах. В итоги number of transactions actually processed:
у двух терминалов 131689 + 133858 = 265 547, что примерно эквивалено по производительности синхронной работе 259108.
Циклы падения производительности тоже пропорциональны 30с.

6. Создайте новый кластер с включенной контрольной суммой страниц. Создайте таблицу. Вставьте несколько значений. Выключите кластер. Измените пару байт в таблице. Включите кластер и сделайте выборку из таблицы. Что и почему произошло? как проигнорировать ошибку и продолжить работу?

Установил еще один кластер (версия 15).
Создал таблицу.
Включил контрольную суммы на выключенном кластере:
su - postgres -c '/usr/lib/postgresql/15/bin/pg_checksums --enable -D "/var/lib/postgresql/15/main"'
Нашёл таблицу командой SELECT pg_relation_filepath('test');
Сломал ее команой 
dd if=16389 of=16389 bs=10 count=1 seek=100 conv=notrunc <<<'\x22'
Запустил кластер
При запросе к таблице получил ошибку, так как файл с таблицей был поврежден.
otus=# select * from test;
WARNING:  page verification failed, calculated checksum 29624 but expected 35943
ERROR:  invalid page in block 0 of relation base/16388/16389
Отключил кластер, отключил контрольную сумму, включил кластер.
В результате запроса к таблице данные снова доступны.


